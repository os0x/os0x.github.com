<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[0xff.toBlog()]]></title>
  <link href="http://os0x.github.com/atom.xml" rel="self"/>
  <link href="http://os0x.github.com/"/>
  <updated>2012-04-02T23:38:18+09:00</updated>
  <id>http://os0x.github.com/</id>
  <author>
    <name><![CDATA[os0x]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[なぜ CoffeeScript がよいか]]></title>
    <link href="http://os0x.github.com/2012/04/02/why-coffee/"/>
    <updated>2012-04-02T21:57:00+09:00</updated>
    <id>http://os0x.github.com/2012/04/02/why-coffee</id>
    <content type="html"><![CDATA[<p><a href="http://subtech.g.hatena.ne.jp/cho45/20120402/1333366338">なぜ CoffeeScript がダメか - 冬通りに消え行く制服ガールは✖夢物語にリアルを求めない。 - subtech</a>について。</p>

<p>いや、本当はこのタイトルにするほど CoffeeScript 推しているわけではないのですが、まあそういう建前で書きます。</p>

<h2>CoffeeScript のメリット</h2>

<h3>簡潔に書ける</h3>

<p>簡潔であるということは、ソースコードにおいて、本質ではない部分を書かなくてよいということで、逆に言えば必要なことだけが書かれている状態に近くなります。少し慣れればむしろ読みやすくなる(と思います)。</p>

<h3>JavaScriptの罠を回避できる</h3>

<p>varを忘れた変数がグローバル変数になるとか、変数のホイスティングとか、オブジェクトリテラルの最後のカンマとか、JavaScriptのfor inはprototypeを辿ってしまう問題とか、JavaScriptの等価演算子が曖昧すぎて嵌りやすい問題とかとか、CoffeeScriptを使うだけで回避できる問題が結構あります。読む側(レビューする側)としても、注意する部分が少ないのでだいぶ楽になります。</p>

<h3>書き方がある程度統一される</h3>

<p>インデントが半強制的に揃う。またCoffeeScriptを書く場所は実質外部ファイルなので(インラインにCoffeeScriptを書く選択肢もないわけではない。Railsだとcoffee-filterとかBaristaとか)、インラインにコードを書かれにくくなる。(まあ、JavaScriptで書いちゃえば元も子もないんだけど)</p>

<h2>CoffeeScript のデメリット</h2>

<h3>デバッグしにくい</h3>

<p>CoffeeScript のままデバッグできるようになる予定はあるが、今のところJavaScriptとして出力されたコードをデバッグすることになる。ある程度長いコードになるとデバッグが大変になってきます。</p>

<h3>記号が多めだけど、中途半端</h3>

<p>->や=>、@など、記号中心と思わせつつ、3項演算子は if ～ then ～ else ～ と書かなければいけなかったりします。3項演算子のイマイチ感は特に強いですね。</p>

<h3>将来的に廃れる可能性がある</h3>

<p>現在、ECMAScript6 とかその先の未来のJavaScriptについて議論が進められており、そこでの CoffeeScript の影響力はすごく大きくなっています。ただ、大きいがゆえに、ECMAScriptが CoffeeScript に近づいていく方向になってきている面があります。というと、CoffeeScript の長所に聞こえるかもしれませんが、実際は CoffeeScript そのものが採用されるわけではないので、 CoffeeScript は ECMAScript に似た中途半端な言語となってしまう可能性が高くなっています(というような話をedvakfさんが)。</p>

<h2>メリットでもデメリットでもないあたり</h2>

<p>個人的にポイントなのは、生成されるJavaScriptがかなり読みやすく、比較的きれいなJavaScriptが生成されるところにあると思っています。GWTやDartなんかがはき出すJavaScriptはとても人間が読み書きできるレベルではないですが、CoffeeScriptの生成するJavaScriptはその正反対です。なので、デバッグは思ったほど大変ではないし、あとでCoffeeScriptをやめたくなったら生成されたJavaScriptに乗り換えるだけでよいのです。極端なことを言えば、CoffeeScriptはプロトタイピングだけに使って、メンテナンスはJavaScriptの状態で行う運用だって可能です。</p>

<p>なので、今だからこそ CoffeeScript を触ってみるのがいいんじゃないかと思っています。ECMAScript6の先取りもできますし。正直CoffeeScriptがベストとは思ってませんし、この先CoffeeScriptをやめるかもしれませんが、そのときは書きだしたJavaScriptをコミットし直すだけです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressとgithub Pagesを使ったブログ]]></title>
    <link href="http://os0x.github.com/2012/04/01/new-blog/"/>
    <updated>2012-04-01T06:06:00+09:00</updated>
    <id>http://os0x.github.com/2012/04/01/new-blog</id>
    <content type="html"><![CDATA[<p>はてなダイアリーからの移転先をいくつか検討していたのですが、どれもしっくりこない。。当分放置でいいかなと思いかけていたのですが、ちょうど<a href="http://shogo82148.github.com/blog/2012/03/21/test/">GitHubにブログを設置してみたよ - Shogo&#8217;s Blog</a>が目に入って、GitHubに置くのはよさそうだなぁと思い、試してみたのがこちらになります。</p>

<p>設置については、</p>

<ul>
<li><a href="http://mattn.kaoriya.net/software/lang/ruby/20111017205717.htm">Big Sky :: githubとjekyllとoctopressで作る簡単でモダンなブログ</a></li>
<li><a href="http://choplin.github.com/blog/2012/01/04/start-octopress/">github pages + octopressはじめました - 分け入ってもコード</a></li>
<li><a href="http://tokkonopapa.github.com/blog/2011/12/30/octopress-on-github-and-bitbucket/">Octopressのインストールから運用管理まで - T.I.D.</a></li>
<li><a href="http://blog.glidenote.com/blog/2011/11/07/install-octopress-on-github/">GithubとOctopressでモダンな技術系ブログを作ってみる * Glide Note - グライドノート</a></li>
<li><a href="http://tokkono.cute.coocan.jp/blog/slow/index.php/programming/github-pages-almost-perfect-guide/">GitHub Pagesホスティングサービス（ほぼ）完全活用ガイド | ゆっくりと…</a></li>
</ul>


<p>などなど、参考になる記事はたくさんあるので、その辺の話は割愛します。</p>

<p>で、なぜ、はてなダイアリーから移転しようとしているのかというと、はてなブログの登場によりダイアリーのほうは後方互換的なアレになってしまったこと、DOCTYPEがアレで互換モードなのはまだいい(いや良くはないけど、今更互換モードとか逆に趣があるというか)としても、文字コードがeuc-jpなのは…みたいな感じです。素直にはてなブログにしてもいいんですが、面白くないよなーということで、辿り着いたのがOctopress + github Pagesといった感じです。</p>

<p>ただ、 Octopress は静的にHTMLを作ったりするところが Movable Type を彷彿させます。はてなダイアリーを使い始める前は Movable Type をレンタルサーバーに設置とかしていた時期がありまして、その頃にブログに書いていたのは Movable Type の設置方法だとか、カスタマイズがどうこうとか、ブログパーツを設置してみたとか、そういった内容ばかりでした。しばらくはそういったことを楽しんでいたのですが、ふと自分のブログの意味のなさに気がついてしまったわけです。
たぶん、こういった現象は珍しくなくて、Linuxを触ったときもそういった傾向がありました。自由度が高いが故に、そのカスタマイズ自体に時間を取られてしまって、あとで振り返ってみるとすごく狭い範囲しか見えてなかったといった感じです。<a href="http://0xcc.net/misc/bad-knowhow.html">奥が深い症候群</a>や<a href="http://0xcc.net/blog/archives/000196.html">yak shaving</a>と少し似ています。</p>

<p>で、 Octopress はかなり自由度が高いので、ちょっと警戒しています。うっかりカスタマイズに時間を取られてしまう予感がしています。まあ、今ならその辺を意識してコントロールできそうなので、しばらくは続けてみようかと思っています。</p>
]]></content>
  </entry>
  
</feed>
